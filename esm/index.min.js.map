{"version":3,"file":"index.min.js","sources":["../src/build-country.js","../src/build-timezone.js","../src/index.js"],"sourcesContent":["let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data);\n  const timezones = tzMap[id] || [];\n\n  return {\n    id,\n    name,\n    timezones,\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const { c, a } = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) Object.assign(result, { [country]: [] });\n      result[country].push(id);\n    });\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const { a: aliasOf = null } = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  return {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf,\n  };\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n","import data from './data.json';\nimport buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\n\nconst totalCountries = Object.keys(data.countries).length;\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedCountries = 0;\nlet memoizedTimezones = 0;\n\nexport function getAllCountries() {\n  if (totalCountries !== memoizedCountries) Object.keys(data.countries).forEach(getCountry);\n  return { ...countries };\n}\n\nexport function getAllTimezones() {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return { ...timezones };\n}\n\nexport function getCountry(id) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return countries[id] ? { ...countries[id] } : null;\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n  memoizedCountries = Object.keys(countries).length;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map(getCountry);\n}\n\nexport function getCountryForTimezone(tzName) {\n  const [main] = getCountriesForTimezone(tzName);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId) {\n  const country = getCountry(countryId);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map(getTimezone);\n}\n"],"names":["timezonesMap","buildCountry","data","id","name","countries","timezones","Object","keys","reduce","result","tz","c","a","aliasTz","forEach","country","assign","push","buildTimezonesMap","getTimezonesMap","getOffsetStr","offset","hours","Math","floor","min","getNumStr","input","num","abs","totalCountries","length","totalTimezones","memoizedCountries","memoizedTimezones","getAllCountries","getCountry","getAllTimezones","getTimezone","memoizeCountry","timezone","memoizeTimezone","aliasOf","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","dstOffsetStr","buildTimezone","getCountriesForTimezone","tzName","map","getCountryForTimezone","getTimezonesForCountry","countryId"],"mappings":"2oDAAIA,4g0BAEW,SAASC,EAAaC,EAAMC,OACnCC,EAAOF,EAAKG,UAAUF,UACvBC,EAKE,CACLD,GAAAA,EACAC,KAAAA,EACAE,UAIJ,SAAyBJ,GAClBF,IAAcA,EAIrB,SAA2BE,UAClBK,OAAOC,KAAKN,EAAKI,WAAWG,QAAO,SAACC,EAAQP,OAC3CQ,EAAKT,EAAKI,UAAUH,GAClBS,EAASD,EAATC,EAAGC,EAAMF,EAANE,EACLC,EAAUZ,EAAKI,UAAUO,IAAM,GAC/BR,EAAYO,GAAKE,EAAQF,SAE1BP,GAELA,EAAUU,SAAQ,SAACC,GACZN,EAAOM,IAAUT,OAAOU,OAAOP,OAAWM,EAAU,KACzDN,EAAOM,GAASE,KAAKf,MAGhBO,GAPgBA,IAQtB,IAnB+BS,CAAkBjB,WAC7CF,EAZOoB,CAAgBlB,GACNC,IAAO,IAHb,KCsBpB,SAASkB,EAAaC,OACdC,EAAQC,KAAKC,MAAMH,EAAS,IAC5BI,EAAMJ,EAAS,mBACRA,EAAS,EAAI,IAAM,YAEfK,EAAUJ,eAAUI,EAAUD,IAGjD,SAASC,EAAUC,OACXC,EAAML,KAAKM,IAAIF,mBACNC,EAAM,GAAK,IAAM,WACbA,GCjCrB,IAAME,EAAiBxB,OAAOC,KAAKN,EAAKG,WAAW2B,OAC7CC,EAAiB1B,OAAOC,KAAKN,EAAKI,WAAW0B,OAC7C3B,EAAY,GACZC,EAAY,GACd4B,EAAoB,EACpBC,EAAoB,EAEjB,SAASC,WACVL,IAAmBG,GAAmB3B,OAAOC,KAAKN,EAAKG,WAAWU,QAAQsB,QAClEhC,GAGP,SAASiC,WACVL,IAAmBE,GAAmB5B,OAAOC,KAAKN,EAAKI,WAAWS,QAAQwB,QAClEjC,GAGP,SAAS+B,EAAWlC,UACpBE,EAAUF,IAIjB,SAAwBa,OACjBA,EAAS,OACdX,EAAUW,EAAQb,IAAMa,EACxBkB,EAAoB3B,OAAOC,KAAKH,GAAW2B,OAPvBQ,CAAevC,EAAaC,EAAMC,IAC/CE,EAAUF,QAAWE,EAAUF,IAAQ,KASzC,SAASoC,EAAYnC,UACrBE,EAAUF,IAIjB,SAAyBqC,OAClBA,EAAU,OACfnC,EAAUmC,EAASrC,MAAQqC,EAC3BN,EAAoB5B,OAAOC,KAAKiC,GAAUT,OAPpBU,CDjCT,SAAuBxC,EAAME,OACpCqC,EAAWvC,EAAKI,UAAUF,OAC3BqC,EAAU,OAAO,WAEQA,EAAtB5B,EAAG8B,aAAU,OAEfhC,SADUgC,EAAUzC,EAAKI,UAAUqC,GAAW,IAG/CzC,EAAKI,UAAUF,IAGdC,EAAYM,EAAGC,GAAK,GACpBgC,EAAYjC,EAAGkC,EACfC,EAAYC,OAAOC,UAAUrC,EAAGsC,GAAKtC,EAAGsC,EAAIL,QAE3C,CACLxC,KAAAA,EACAC,UAAAA,EACAuC,UAAAA,EACAM,aAAc7B,EAAauB,GAC3BE,UAAAA,EACAK,aAAc9B,EAAayB,GAC3BH,QAAAA,GCWoCS,CAAclD,EAAME,IACnDE,EAAUF,QAAaE,EAAUF,IAAU,KAS7C,SAASiD,EAAwBC,WACrBf,EAAYe,IAAW,IAChBjD,WAAa,IACvBkD,IAAIlB,GAGb,SAASmB,EAAsBF,YACrBD,EAAwBC,UACxB,KAGV,SAASG,EAAuBC,OAC/B1C,EAAUqB,EAAWqB,UACtB1C,GACUA,EAAQV,WAAa,IACtBiD,IAAIhB,GAFG"}