{"version":3,"file":"index.js","sources":["../src/build-country.js","../src/build-timezone.js","../src/index.js"],"sourcesContent":["let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data);\n  const timezones = tzMap[id] || [];\n\n  return {\n    id,\n    name,\n    timezones\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n};\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const {c, a} = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) result[country] = [];\n      result[country].push(id);\n    });\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const {a: aliasOf = null} = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name]\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  return {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf\n  };\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n","import buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\nimport data from './data.json';\n\nconst totalCountries = Object.keys(data.countries).length;\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedCountries = 0;\nlet memoizedTimezones = 0;\n\nexport function getAllCountries() {\n  if (totalCountries !== memoizedCountries) Object.keys(data.countries).forEach(getCountry);\n  return { ...countries };\n}\n\nexport function getAllTimezones() {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return { ...timezones };\n}\n\nexport function getCountry(id) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return countries[id] ? { ...countries[id] } : null;\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n  memoizedCountries = Object.keys(countries).length;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName) {\n  const timezone = getTimezone(tzName) || {};\n  const countries = timezone.countries || [];\n  return countries.map(getCountry);\n}\n\nexport function getCountryForTimezone(tzName) {\n  const [main] = getCountriesForTimezone(tzName);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId) {\n  const country = getCountry(countryId);\n  if (!country) return null;\n  const {timezones = []} = country;\n  return timezones.map(getTimezone);\n}\n"],"names":["timezonesMap","buildCountry","data","id","name","countries","timezones","getTimezonesMap","buildTimezonesMap","Object","keys","reduce","result","tz","c","a","aliasTz","forEach","country","push","buildTimezone","timezone","aliasOf","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","getOffsetStr","dstOffsetStr","offset","hours","Math","floor","min","getNumStr","input","num","abs","totalCountries","length","totalTimezones","memoizedCountries","memoizedTimezones","getAllCountries","getCountry","getAllTimezones","getTimezone","memoizeCountry","memoizeTimezone","getCountriesForTimezone","tzName","map","getCountryForTimezone","getTimezonesForCountry","countryId"],"mappings":"q4DAAA,IAAIA,aAEW,SAASC,aAAaC,EAAMC,OACnCC,EAAOF,EAAKG,UAAUF,UACvBC,EAKE,CACLD,GAAAA,EACAC,KAAAA,EACAE,UANYC,gBAAgBL,GACNC,IAAO,IAHb,KAYpB,SAASI,gBAAgBL,UACJF,aAAdA,cAA6BQ,kBAAkBN,GAItD,SAASM,kBAAkBN,UAClBO,OAAOC,KAAKR,EAAKI,WAAWK,OAAO,SAACC,EAAQT,OAC3CU,EAAKX,EAAKI,UAAUH,GACnBW,EAAQD,EAARC,EAAGC,EAAKF,EAALE,EACJC,EAAUd,EAAKI,UAAUS,IAAM,GAC/BV,EAAYS,GAAKE,EAAQF,SAE1BT,GAELA,EAAUY,QAAQ,SAACC,GACZN,EAAOM,KAAUN,EAAOM,GAAW,IACxCN,EAAOM,GAASC,KAAKhB,KAGhBS,GACN,ICpCU,SAASQ,cAAclB,EAAME,OACpCiB,EAAWnB,EAAKI,UAAUF,OAC3BiB,EAAU,OAAO,WAEMA,EAArBN,EAAGO,aAAU,OAEdT,mCADUS,EAAUpB,EAAKI,UAAUgB,GAAW,IAG/CpB,EAAKI,UAAUF,IAGdC,EAAYQ,EAAGC,GAAK,GACpBS,EAAYV,EAAGW,EACfC,EAAYC,OAAOC,UAAUd,EAAGe,GAAKf,EAAGe,EAAIL,QAE3C,CACLnB,KAAAA,EACAC,UAAAA,EACAkB,UAAAA,EACAM,aAAcC,aAAaP,GAC3BE,UAAAA,EACAM,aAAcD,aAAaL,GAC3BH,QAAAA,GAIJ,SAASQ,aAAaE,OACdC,EAAQC,KAAKC,MAAMH,EAAS,IAC5BI,EAAMJ,EAAS,mBACRA,EAAS,EAAI,IAAM,YAEfK,UAAUJ,eAAUI,UAAUD,IAGjD,SAASC,UAAUC,GACXC,EAAML,KAAKM,IAAIF,mBACNC,EAAM,GAAK,IAAM,WACbA,ok0BCjCfE,eAAiBhC,OAAOC,KAAKR,KAAKG,WAAWqC,OAC7CC,eAAiBlC,OAAOC,KAAKR,KAAKI,WAAWoC,OAC7CrC,UAAY,GACZC,UAAY,GACdsC,kBAAoB,EACpBC,kBAAoB,EAEjB,SAASC,yBACVL,iBAAmBG,mBAAmBnC,OAAOC,KAAKR,KAAKG,WAAWY,QAAQ8B,8BAClE1C,WAGP,SAAS2C,yBACVL,iBAAmBE,mBAAmBpC,OAAOC,KAAKR,KAAKI,WAAWW,QAAQgC,+BAClE3C,WAGP,SAASyC,WAAW5C,UACpBE,UAAUF,IAAK+C,eAAejD,aAAaC,KAAMC,IAC/CE,UAAUF,qBAAWE,UAAUF,IAAQ,KAGhD,SAAS+C,eAAehC,GACjBA,IACLb,UAAUa,EAAQf,IAAMe,EACxB0B,kBAAoBnC,OAAOC,KAAKL,WAAWqC,QAGtC,SAASO,YAAY7C,UACrBE,UAAUF,IAAO+C,gBAAgB/B,cAAclB,KAAME,IACnDE,UAAUF,qBAAaE,UAAUF,IAAU,KAGpD,SAAS+C,gBAAgB9B,GAClBA,IACLf,UAAUe,EAASjB,MAAQiB,EAC3BwB,kBAAoBpC,OAAOC,KAAKW,GAAUqB,QAGrC,SAASU,wBAAwBC,WACrBJ,YAAYI,IAAW,IACbhD,WAAa,IACvBiD,IAAIP,YAGhB,SAASQ,sBAAsBF,yBACrBD,wBAAwBC,UACxB,KAGV,SAASG,uBAAuBC,GAC/BvC,EAAU6B,WAAWU,OACtBvC,EAAS,OAAO,OACIA,EAAlBZ,4BAAY,MACFgD,IAAIL"}